_min_copier_version: "9.0.0"
_answers_file: ".copier-answers.yml"
_envops:
  block_start_string: "{%"
  block_end_string: "%}"
  variable_start_string: "{{"
  variable_end_string: "}}"
  keep_trailing_newline: true

# -----------------------------
# Questions / inputs
# -----------------------------
project_name:
  type: str
  default: "Hatch Test"
  help: "Human-readable project name."

project_slug:
  type: str
  # hyphenated distribution name (e.g., hatch-test)
  # sanitize: lower → spaces/underscores to '-' → strip non [a-z0-9-] → collapse dashes → trim dashes
  default: >-
    {{
      project_name
      | lower
      | replace(' ', '-')
      | replace('_', '-')
      | regex_replace('[^a-z0-9-]+', '-')
      | regex_replace('-{2,}', '-')
      | trim('-')
    }}
  help: "Hyphenated package name used on PyPI."

package_slug:
  type: str
  # underscore import name (e.g., hatch_test) — hyphen→underscore mapping + sanitize
  default: >-
    {{
      project_slug
      | replace('-', '_')
      | regex_replace('[^a-z0-9_]+', '_')
      | regex_replace('_{2,}', '_')
      | trim('_')
    }}
  help: "Top-level Python package/import name."
python_min_minor:
  type: str
  default: "3.12"
  help: "Baseline Python minor (e.g., 3.12)."

pin_upper_bound:
  type: bool
  default: true
  help: "Pin requires-python upper bound (< next minor)?"

python_max_minor_exclusive:
  when: pin_upper_bound
  type: str
  default: "3.13"
  help: "Exclusive upper bound (usually next minor, e.g., 3.13)."

# -----------------------------
# Copy rules
# -----------------------------
_copy_without_render: []

# Optional: ignore junk when copying into a repo
_exclude:
  - .git/**
  - .venv/**
  - .mypy_cache/**
  - .pytest_cache/**
  - "**/__pycache__/**"
  - ".copier-answers.yml"
  - scripts/poetry_to_hatch.py
  - scripts/projnew.py
  - scripts/relocate_templates.sh
  - tasks.py
  - extensions/context.py
  - .trunk/actions/**
  - .trunk/logs/**
  - .trunk/notifications/**
  - .trunk/out/**
  - .trunk/plugins/**
  - .trunk/tools/**

# -----------------------------
# Post-copy tasks
# -----------------------------
_tasks:
  # 1) baseline commit so overlay shows as a clean diff
  - ["git", "init", "-b", "main"]
  - ["git", "add", "."]
  - ["git", "commit", "-m", "chore: scaffold from Copier"]

  # 2) python + deps (all groups)
  - ["uv", "python", "install"]
  - ["uv", "sync", "--all-groups"]

  # 3) trunk runtimes + hooks (non-interactive)
  - ["trunk", "install"]
  - ["trunk", "git-hooks", "sync"]

  # 4) generate initial changelogs
  - ["git", "cliff", "--output", "CHANGELOG.md"]
  - ["uv", "run", "towncrier", "build", "--version", "0.0.1", "--yes"]  # creates initial RELEASE_NOTES.md
  - ["git", "add", "CHANGELOG.md", "RELEASE_NOTES.md"]

  # 5) final commit after setup + hooks + changelogs (skip trunk check)
  - ["git", "add", "."]
  - ["git", "-c", "core.hooksPath=/dev/null", "commit", "-m", "chore: initial project setup with Trunk hooks"]
